n = 5:
Romerico David: Assignment 4: # of threads = 5
This is philosopher 0
This is philosopher 1
This is philosopher 2
This is philosopher 3
This is philosopher 4
5 threads have been completed/joined successfully!

n = 20:
Romerico David: Assignment 4: # of threads = 20
This is philosopher 0
This is philosopher 1
This is philosopher 4
This is philosopher 7
This is philosopher 8
This is philosopher 6
This is philosopher 11
This is philosopher 12
This is philosopher 3
This is philosopher 5
This is philosopher 13
This is philosopher 10
This is philosopher 9
This is philosopher 2
This is philosopher 14
This is philosopher 15
This is philosopher 16
This is philosopher 17
This is philosopher 18
This is philosopher 19
20 threads have been completed/joined successfully!


Explanation: pthreads are created using the createPhilosophers() function which each execute philosopherThread() and prints their index. pthread_join() is used in a loop to ensure that the main thread waits for all
philosopher threads to finish before exiting. This guarantees that no threads are left running when the program terminates and ensures synchronization between the main thread and child threads.